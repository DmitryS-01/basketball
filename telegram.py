from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart
from aiogram.types import Message

import asyncio

from random import *

from config import bot_token
from database import *


async def main() -> None:
    bot = Bot(bot_token)
    await dp.start_polling(bot)


def random_num():
    win_nums = [1, 2, 3, 4]
    return randrange(1, 11) in win_nums


dp = Dispatcher()

its_a_hit = ['–•–û–†–û–û–û–û–û–®!!!!', '–ø—Ä–æ—Å—Ç–æ –ª—É—á—à–∏–π!', '–õ–ï–ì–ï–ù–î–ê!!!!', '—Å–µ–≥–æ–¥–Ω—è —Ç—ã –ø—Ä–æ—Å—Ç–æ –¥–µ–º–æ–Ω üëø',
             '–ë–£–î–¨ –Ø –ú–ê–¢–ï–†–ò–ê–õ–¨–ù–´–ú, –Ø –ë–´ –¢–ï–ë–ï –î–ê–õ!', '–í–ê–£!',
             'üèÄ', 'üèÄ', 'üèÄ', 'üèÄ', 'üèÄ']
oh_u_missed = ['–≥–ª–∞–≤–Ω–æ–µ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è(', '–ø–æ—á—Ç–∏ –ø–æ–ø–∞–ª –±—Ä–∞—Ç', '–Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —è —Ç–æ–∂–µ –Ω–µ –≤—Å–µ–≥–¥–∞ –ø–æ–ø–∞–¥–∞—é',
               'üèÄ', 'üèÄ', 'üèÄ']


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                         f"–Ø –±—É–¥—É –≤–µ—Å—Ç–∏ –≤—Å—é —Ç–≤–æ—é –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—É—é —Å—Ç–∞—Ç—É!\n"
                         f"–ù–∞–ø–∏—à–∏ '/my_stats' —á—Ç–æ–±—ã –µ–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üòò")


@dp.message()
async def message_handler(message: Message) -> None:
    user_id = message.from_user.id
    user_message = message.text
    user_dice = message.dice

    if message.text == '/my_stats':
        try:
            tries, points = data(user_id)
            hit_percentage = f'–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π - {round((points / tries) * 100, 2)}% !' if tries >= 15 else \
                f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —Å–æ–≤–µ—Ä—à–∏ –Ω–µ –º–µ–Ω–µ–µ 15 –±—Ä–æ—Å–∫–æ–≤!'
            await message.reply(f'–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üèÄ:\n'
                                f'–ü–æ–ø–∞–¥–∞–Ω–∏–π - {points}, –≤—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤ - {tries}\n'
                                f'{hit_percentage}')
        except Exception as e:
            print(f'{e}')

    if user_dice:
        dice_type = user_dice.emoji
        score = user_dice.value
        if dice_type == 'üèÄ':
            '''
            1 - –æ—Ç—Å–∫–æ—á–∏–ª –æ—Ç —â–∏—Ç–∞
            2 - –ø–æ–∫—Ä—É—Ç–∏–ª—Å—è –∏ —Å–≤–∞–ª–∏–ª—Å—è
            3 - –∑–∞—Å—Ç—Ä—è–ª 
            4 - –ø–æ–∫—Ä—É—Ç–∏–ª—Å—è –∏ –ø–æ–ø–∞–ª –≤ –∫–æ—Ä–∑–∏–Ω—É
            5 - –ø–æ–ø–∞–¥–∞–Ω–∏–µ –±–µ–∑ –∫–∞—Å–∞–Ω–∏—è –∫–æ–ª—å—Ü–∞
            '''
            new_user(user_id)
            new_shot(user_id, int(score in [4, 5]))

            await asyncio.sleep(5)
            if score in [4, 5]:
                try:
                    await message.reply(choice(its_a_hit))
                except Exception as e:
                    print(f'{e}')
            else:
                try:
                    if random_num():
                        await message.reply(choice(oh_u_missed))
                except Exception as e:
                    print(f'{e}')
        else:
            pass

    if user_message:
        pass


if __name__ == "__main__":
    asyncio.run(main())
